<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spinwheel.base.dao.SbOddsDetailMapper">
  <resultMap id="BaseResultMap" type="com.example.spinwheel.base.domain.SbOddsDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scheduleID" jdbcType="INTEGER" property="scheduleID" />
    <result column="HappenTime" jdbcType="VARCHAR" property="happenTime" />
    <result column="homeScore" jdbcType="SMALLINT" property="homeScore" />
    <result column="guestScore" jdbcType="SMALLINT" property="guestScore" />
    <result column="upOdds" jdbcType="DOUBLE" property="upOdds" />
    <result column="goal" jdbcType="DOUBLE" property="goal" />
    <result column="downOdds" jdbcType="DOUBLE" property="downOdds" />
    <result column="homeRed" jdbcType="INTEGER" property="homeRed" />
    <result column="guestRed" jdbcType="INTEGER" property="guestRed" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="modifytime" jdbcType="TIMESTAMP" property="modifytime" />
    <result column="CompanyID" jdbcType="INTEGER" property="companyID" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scheduleID, HappenTime, homeScore, guestScore, upOdds, goal, downOdds, homeRed, 
    guestRed, type, modifytime, CompanyID
  </sql>
  <select id="selectByExample" parameterType="com.example.spinwheel.base.domain.SbOddsDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sbOddsDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sbOddsDetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sbOddsDetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.spinwheel.base.domain.SbOddsDetailExample">
    delete from sbOddsDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.spinwheel.base.domain.SbOddsDetail">
    insert into sbOddsDetail (id, scheduleID, HappenTime, 
      homeScore, guestScore, upOdds, 
      goal, downOdds, homeRed, 
      guestRed, type, modifytime, 
      CompanyID)
    values (#{id,jdbcType=INTEGER}, #{scheduleID,jdbcType=INTEGER}, #{happenTime,jdbcType=VARCHAR}, 
      #{homeScore,jdbcType=SMALLINT}, #{guestScore,jdbcType=SMALLINT}, #{upOdds,jdbcType=DOUBLE}, 
      #{goal,jdbcType=DOUBLE}, #{downOdds,jdbcType=DOUBLE}, #{homeRed,jdbcType=INTEGER}, 
      #{guestRed,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{modifytime,jdbcType=TIMESTAMP}, 
      #{companyID,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.spinwheel.base.domain.SbOddsDetail">
    insert into sbOddsDetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scheduleID != null">
        scheduleID,
      </if>
      <if test="happenTime != null">
        HappenTime,
      </if>
      <if test="homeScore != null">
        homeScore,
      </if>
      <if test="guestScore != null">
        guestScore,
      </if>
      <if test="upOdds != null">
        upOdds,
      </if>
      <if test="goal != null">
        goal,
      </if>
      <if test="downOdds != null">
        downOdds,
      </if>
      <if test="homeRed != null">
        homeRed,
      </if>
      <if test="guestRed != null">
        guestRed,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="modifytime != null">
        modifytime,
      </if>
      <if test="companyID != null">
        CompanyID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scheduleID != null">
        #{scheduleID,jdbcType=INTEGER},
      </if>
      <if test="happenTime != null">
        #{happenTime,jdbcType=VARCHAR},
      </if>
      <if test="homeScore != null">
        #{homeScore,jdbcType=SMALLINT},
      </if>
      <if test="guestScore != null">
        #{guestScore,jdbcType=SMALLINT},
      </if>
      <if test="upOdds != null">
        #{upOdds,jdbcType=DOUBLE},
      </if>
      <if test="goal != null">
        #{goal,jdbcType=DOUBLE},
      </if>
      <if test="downOdds != null">
        #{downOdds,jdbcType=DOUBLE},
      </if>
      <if test="homeRed != null">
        #{homeRed,jdbcType=INTEGER},
      </if>
      <if test="guestRed != null">
        #{guestRed,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyID != null">
        #{companyID,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.spinwheel.base.domain.SbOddsDetailExample" resultType="java.lang.Long">
    select count(*) from sbOddsDetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sbOddsDetail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleID != null">
        scheduleID = #{record.scheduleID,jdbcType=INTEGER},
      </if>
      <if test="record.happenTime != null">
        HappenTime = #{record.happenTime,jdbcType=VARCHAR},
      </if>
      <if test="record.homeScore != null">
        homeScore = #{record.homeScore,jdbcType=SMALLINT},
      </if>
      <if test="record.guestScore != null">
        guestScore = #{record.guestScore,jdbcType=SMALLINT},
      </if>
      <if test="record.upOdds != null">
        upOdds = #{record.upOdds,jdbcType=DOUBLE},
      </if>
      <if test="record.goal != null">
        goal = #{record.goal,jdbcType=DOUBLE},
      </if>
      <if test="record.downOdds != null">
        downOdds = #{record.downOdds,jdbcType=DOUBLE},
      </if>
      <if test="record.homeRed != null">
        homeRed = #{record.homeRed,jdbcType=INTEGER},
      </if>
      <if test="record.guestRed != null">
        guestRed = #{record.guestRed,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.modifytime != null">
        modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.companyID != null">
        CompanyID = #{record.companyID,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sbOddsDetail
    set id = #{record.id,jdbcType=INTEGER},
      scheduleID = #{record.scheduleID,jdbcType=INTEGER},
      HappenTime = #{record.happenTime,jdbcType=VARCHAR},
      homeScore = #{record.homeScore,jdbcType=SMALLINT},
      guestScore = #{record.guestScore,jdbcType=SMALLINT},
      upOdds = #{record.upOdds,jdbcType=DOUBLE},
      goal = #{record.goal,jdbcType=DOUBLE},
      downOdds = #{record.downOdds,jdbcType=DOUBLE},
      homeRed = #{record.homeRed,jdbcType=INTEGER},
      guestRed = #{record.guestRed,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
      CompanyID = #{record.companyID,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.spinwheel.base.domain.SbOddsDetail">
    update sbOddsDetail
    <set>
      <if test="scheduleID != null">
        scheduleID = #{scheduleID,jdbcType=INTEGER},
      </if>
      <if test="happenTime != null">
        HappenTime = #{happenTime,jdbcType=VARCHAR},
      </if>
      <if test="homeScore != null">
        homeScore = #{homeScore,jdbcType=SMALLINT},
      </if>
      <if test="guestScore != null">
        guestScore = #{guestScore,jdbcType=SMALLINT},
      </if>
      <if test="upOdds != null">
        upOdds = #{upOdds,jdbcType=DOUBLE},
      </if>
      <if test="goal != null">
        goal = #{goal,jdbcType=DOUBLE},
      </if>
      <if test="downOdds != null">
        downOdds = #{downOdds,jdbcType=DOUBLE},
      </if>
      <if test="homeRed != null">
        homeRed = #{homeRed,jdbcType=INTEGER},
      </if>
      <if test="guestRed != null">
        guestRed = #{guestRed,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="modifytime != null">
        modifytime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyID != null">
        CompanyID = #{companyID,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.spinwheel.base.domain.SbOddsDetail">
    update sbOddsDetail
    set scheduleID = #{scheduleID,jdbcType=INTEGER},
      HappenTime = #{happenTime,jdbcType=VARCHAR},
      homeScore = #{homeScore,jdbcType=SMALLINT},
      guestScore = #{guestScore,jdbcType=SMALLINT},
      upOdds = #{upOdds,jdbcType=DOUBLE},
      goal = #{goal,jdbcType=DOUBLE},
      downOdds = #{downOdds,jdbcType=DOUBLE},
      homeRed = #{homeRed,jdbcType=INTEGER},
      guestRed = #{guestRed,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      modifytime = #{modifytime,jdbcType=TIMESTAMP},
      CompanyID = #{companyID,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>